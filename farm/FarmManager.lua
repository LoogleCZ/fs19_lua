FarmManager = {
  farms = {},
  debug_hasAskedCreate = false,
  loadedMapData = false,
  farmIdToFarm = false
}

FarmManager.SPECTATOR_FARM_ID = 0.000000
FarmManager:SINGLEPLAYER_FARM_ID = 1.000000
FarmManager:MAX_FARM_ID = 8.000000
FarmManager:INVALID_FARM_ID = 15.000000
FarmManager:MAX_NUM_FARMS = 8.000000
FarmManager:SINGLEPLAYER_UUID = 'player'
FarmManager:FARM_ID_SEND_NUM_BITS = 4.000000

function FarmManager:new() end
function FarmManager:createFarm() end
function FarmManager:loadMapData() end
function FarmManager:delete() end
function FarmManager:loadFromXMLFile() end
function FarmManager:mergeFarmsForSingleplayer() end
function FarmManager:loadDefaults() end
function FarmManager:updateFarms() end
function FarmManager:copy() end
function FarmManager:getFarms() end
function FarmManager:saveToXMLFile() end
function FarmManager:consoleCommandSetFarm() end
function FarmManager:getFarmById() end
function FarmManager:removeFarm() end
function FarmManager:playerJoinedGame() end
function FarmManager:onFarmObjectCreated() end
function FarmManager:onFarmObjectDeleted() end
function FarmManager:initDataStructures() end
function FarmManager:consoleCommandCreateFarm() end
function FarmManager:findNextFarmId() end
function FarmManager:destroyFarm() end
function FarmManager:updateFarmStats() end
function FarmManager:transferMoney() end
function FarmManager:playerQuitGame() end
function FarmManager:removeUserFromFarm() end
function FarmManager:getSpawnPoint() end
function FarmManager:mergeObjectsForSingleplayer() end
function FarmManager:isa() end
function FarmManager:class() end
function FarmManager:unloadMapData() end
function FarmManager:appendFarm() end
function FarmManager:update() end
function FarmManager:getFarmByUserId() end
function FarmManager:getFarmForUniqueUserId() end
function FarmManager:superClass() end
function FarmManager:mergeFarmlandsForSingleplayer() end
function FarmManager:getSleepCamera() end