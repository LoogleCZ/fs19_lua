FarmlandManager = {
  farmlandMapping = {},
  pricePerHa = 0,
  stateChangeListener = {},
  farmlands = {},
  localMapWidth = 0,
  localMap = 0,
  sortedFarmlandIds = {},
  loadedMapData = false,
  numberOfBits = 6,
  localMapHeight = 0
  }

FarmlandManager.NO_OWNER_FARM_ID = 0.000000
FarmlandManager.NOT_BUYABLE_FARM_ID = 255.000000

function FarmlandManager:getFarmlandIdAtWorldPosition() end
function FarmlandManager:convertWorldToLocalPosition() end
function FarmlandManager:loadMapData() end
function FarmlandManager:farmDestroyed() end
function FarmlandManager:loadFromXMLFile() end
function FarmlandManager:addStateChangeListener() end
function FarmlandManager:getFarmlandAtWorldPosition() end
function FarmlandManager:consoleCommandBuyAllFarmlands() end
function FarmlandManager:copy() end
function FarmlandManager:getIsValidFarmlandId() end
function FarmlandManager:getFarmlandOwner() end
function FarmlandManager:saveToXMLFile() end
function FarmlandManager:getPricePerHa() end
function FarmlandManager:getFarmlands() end
function FarmlandManager:getIsOwnedByFarmAtWorldPosition() end
function FarmlandManager:initDataStructures() end
function FarmlandManager:getLocalMap() end
function FarmlandManager:loadFarmlandData() end
function FarmlandManager:superClass() end
function FarmlandManager:getOwnedFarmlandIdsByFarmId() end
function FarmlandManager:setLandOwnership() end
function FarmlandManager:class() end
function FarmlandManager:removeStateChangeListener() end
function FarmlandManager:getOwnerIdAtWorldPosition() end
function FarmlandManager:consoleCommandSellAllFarmlands() end
function FarmlandManager:consoleCommandSellFarmland() end
function FarmlandManager:delete() end
function FarmlandManager:isa() end
function FarmlandManager:unloadMapData() end
function FarmlandManager:getFarmlandById() end
function FarmlandManager:consoleCommandBuyFarmland() end
function FarmlandManager:new() end